<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tian.mapper.SystemMessageMapper" >
  <resultMap id="BaseResultMap" type="com.tian.entity.SystemMessage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="send_type" property="sendType" jdbcType="INTEGER" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_system_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tian.entity.SystemMessage" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_system_message (title, create_time, update_time,
    send_type, deleted, link,
    content)
    values (#{title,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
    #{sendType,jdbcType=INTEGER}, #{deleted,jdbcType=INTEGER}, #{link,jdbcType=VARCHAR},
    #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.tian.entity.SystemMessage" >
    update tb_system_message
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      send_type = #{sendType,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      link = #{link,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="deleteByPrimaryKey" parameterType="com.tian.entity.SystemMessage" >
    update tb_system_message
    set  deleted = 1
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, title, create_time, update_time, send_type, deleted, link, content
    from tb_system_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, title, create_time, update_time, send_type, deleted, link, content
    from tb_system_message
  </select>
</mapper>